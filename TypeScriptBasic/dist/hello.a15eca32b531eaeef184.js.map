{"version":3,"file":"hello.a15eca32b531eaeef184.js","mappings":"qKAAA,eACA,QAEA,iBAIC,WAAAA,GACCC,KAAKC,SAAW,EACjB,CAEA,OAAAC,CAAQC,EAAeC,IACtB,IAAAC,YAEA,MAAMC,EAAO,IAAI,EAAAC,KAAKJ,EAAOC,GAI7B,OAHAJ,KAAKC,SAASO,QAAQF,GAGfA,CACR,CAEA,SAAAG,IACC,IAAAJ,YACA,IAAK,IAAIK,EAAQ,EAAGA,EAAQV,KAAKC,SAASU,OAAQD,IAAS,CAC1D,MAAME,EAAUZ,KAAKC,SAASS,GAC9BG,QAAQC,IAAIF,EAAQG,WACrB,CACD,E,+EC3BD,cAEA,MAAaR,EAUZ,WAAAR,CAAYI,EAAeC,GACzBJ,KAAKgB,GAAKhB,KAAKiB,aACfjB,KAAKG,MAAQA,EACbH,KAAKI,YAAcA,GAAe,GAClCJ,KAAKkB,WAAY,EACjBlB,KAAKmB,UAAY,IAAIC,KACrBpB,KAAKqB,UAAY,IAAID,IACvB,CAEA,UAAAH,IACC,IAAAZ,YAGC,IAAIiB,EAAMf,EAAKgB,SAEf,OADAhB,EAAKgB,WACED,EAAIP,UACb,CAEA,eAAAS,GACExB,KAAKkB,WAAY,EACjBlB,KAAKqB,UAAY,IAAID,IACvB,CAMA,QAAAL,GACC,MAAO,SAASf,KAAKgB,OAAOhB,KAAKG,UAAUH,KAAKI,gBAAgBJ,KAAKqB,cAAcrB,KAAKkB,WACzF,EAvCD,SAQQ,EAAAK,SAAW,C,gBCTnB,MAAQE,GAAIC,GAAW,EAAQ,KAC/B,QAGA,SAKA,MAAaC,EAKX,WAAA5B,GAJQ,KAAA6B,SAAW,IAAI,EAAAC,QAIR,CAGf,OAAAC,IACE,IAAAzB,YAEAL,KAAKE,QAAQ,QAAS,QACtBF,KAAKE,QAAQ,SAAU,SACdwB,GAGX,CAEA,OAAAxB,CAAQC,EAAe4B,GACrB,MAAMzB,EAAON,KAAK4B,SAAS1B,QAAQC,EAAO4B,GAC1CC,EAAE,YAAYC,OAAO,aAAe3B,EAAKS,WAC3C,CAEA,UAAAmB,IACE,IAAA7B,YAEAL,KAAK4B,SAASnB,WAChB,EAxBO,EAAA0B,IAAM,IAAIR,EA0BnBK,EAAEI,UAAUC,OAAM,WAEhBxB,QAAQC,IAAI,aACZa,EAAYQ,IAAIL,UAMhBE,EAAE,YAAYM,GAAG,SAAS,WACxBzB,QAAQC,IAAI,eACZa,EAAYQ,IAAID,YAClB,GACF,G,gFCpBE,sBACDrB,QAAQC,IAAI,cAAe,wCA/B5B,SAAiByB,GAChB,MAAMC,EAAQ,IAAIC,MAClB,GAAmB,MAAfD,EAAME,MACR,MAAO,GAOT,MAAMC,EAAeH,EAAME,MAAME,MAAM,MAAM,GACvCC,EAAcL,EAAME,MAAME,MAAM,OAAO,GACvCE,EAAcN,EAAME,MAAME,MAAM,MAAM,GAM5C,IAAIG,EAAMJ,GAAgBE,GAAeC,EAEzCC,EAAMA,EAAIC,QAAQ,KAAM,IACxBD,EAAMA,EAAIE,OAEV,MAAMC,EAAeH,EAAII,QAAQ,KACjC,OAAqB,GAAjBD,EACI,GAEDH,EAAIK,UAAU,EAAGF,EACvB,CAGmEG,GACnE,C","sources":["webpack://ts-basic/./src/core/datas/todoRepo.ts","webpack://ts-basic/./src/core/entities/todoItem.ts","webpack://ts-basic/./src/index.ts","webpack://ts-basic/./src/utilities/zLog.ts"],"sourcesContent":["import { Todo } from \"core/entities/todoItem\";\nimport { FUNC_LOG } from \"utilities/zLog\";\n\nexport class TodoRepo {\n\n\tprivate todoList : Todo[];\n\n\tconstructor(){\n\t\tthis.todoList = [];\n\t}\n\n\taddTodo(title: string, description?: string): Todo {\n\t\tFUNC_LOG();\n\t\t\n\t\tconst todo = new Todo(title, description);\n\t\tthis.todoList.unshift(todo);\n\t\t\n\t\t//add new todo for data hahahaha\n\t\treturn todo;\n\t}\n\n\tprintTodo(){\n\t\tFUNC_LOG();\n\t\tfor (let index = 0; index < this.todoList.length; index++) {\n\t\t\tconst element = this.todoList[index];\n\t\t\tconsole.log(element.toString());\n\t\t}\n\t}\n}\n","import { FUNC_LOG } from \"utilities/zLog\";\n\nexport class Todo {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\tcompleted: boolean;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n  \n\tstatic globalID = 0;\n  \n\tconstructor(title: string, description?: string) {\n\t  this.id = this.generateId();\n\t  this.title = title;\n\t  this.description = description || \"\";\n\t  this.completed = false;\n\t  this.createdAt = new Date();\n\t  this.updatedAt = new Date();\n\t}\n  \n\tgenerateId(): string {\n\t\tFUNC_LOG();\n\n\t  // Generate a unique identifier for each Todo instance\n\t  let val = Todo.globalID;\n\t  Todo.globalID++;\n\t  return val.toString();\n\t}\n  \n\tmarkAsCompleted(): void {\n\t  this.completed = true;\n\t  this.updatedAt = new Date();\n\t}\n\n\t/**\n\t * get text from todo\n\t * @returns description of a todo\n\t */\n\ttoString(): string{\n\t\treturn `TODO #${this.id}\\t${this.title}\\t${this.description}\\t${this.updatedAt}\\t${this.completed}`\n\t}\n  }","// import jquery = require(\"jquery\");\nconst { v4: uuidv4 } = require(\"uuid\");\nimport { FUNC_LOG } from \"utilities/zLog\";\n// import { FUNC_LOG } from \"./utilities/zLog\";\n// import { getFuncName } from \"./utilities/zLog\";\nimport { TodoRepo } from \"core/datas/todoRepo\";\n// this helps TypeScript to understand jQuery best !!!  otherwise It will confused .\n// const $: JQueryStatic = jquery;\n\n\nexport class Application {\n  private todoRepo = new TodoRepo();\n\n  static app = new Application();\n\n  constructor() {}\n\n  //   @named\n  initApp() {\n    FUNC_LOG();\n\n    this.addTodo(\"TITLE\", \"DESC\");\n    this.addTodo(\"TITLE2\", \"DESC2\");\n    let v4 = uuidv4();\n    // console.log(`UUID = ${v4}`);\n    // console.log(chalk.red(`UUID = ${v4}`))\n  }\n\n  addTodo(title: string, desc: string) {\n    const todo = this.todoRepo.addTodo(title, desc);\n    $(\"#content\").append(\"<br>Added \" + todo.toString());\n  }\n\n  renderTodo(){\n    FUNC_LOG();\n\n    this.todoRepo.printTodo();\n  }\n}\n$(document).ready(function () {\n  // jQuery methods go here...\n  console.log(\"APP BEGIN\");\n  Application.app.initApp();\n\n  if (_DEBUG_) {\n    console.warn('Extra logging');\n  }\n\n  $(\"#btnTest\").on(\"click\", function () {\n    console.log(\"BTN CLICKED\");\n    Application.app.renderTodo();\n  })\n});\n","\n// import chalk from \"chalk\";\nfunction getName(d:number) : string{\n\tconst error = new Error();\n\tif (error.stack == null) {\n\t  return \"\";\n\t}\n  \n\t// const firefoxMatch = (error.stack.split('\\n')[0 + d].match(/^.*(?=@)/) || [])[0];\n\t// const chromeMatch = ((((error.stack.split('at ') || [])[1 + d] || '').match(/(^|\\.| <| )(.*[^(<])( \\()/) || [])[2] || '').split('.').pop();\n\t// const safariMatch = error.stack.split('\\n')[0 + d];\n  \n\tconst firefoxMatch = error.stack.split('\\n')[0 + d];\n\tconst chromeMatch = error.stack.split('at ')[1 + d];\n\tconst safariMatch = error.stack.split('\\n')[0 + d];\n  \n\t// firefoxMatch ? console.log('firefoxMatch', firefoxMatch) : void 0;\n\t// chromeMatch ? console.log('chromeMatch', chromeMatch) : void 0;\n\t// safariMatch ? console.log('safariMatch', safariMatch) : void 0;\n\t\n\tlet res = firefoxMatch || chromeMatch || safariMatch;\n\n\tres = res.replace(\"at\", \"\");\n\tres = res.trim();\n\n\tconst idxOfPathent = res.indexOf(\"(\");\n\tif (idxOfPathent == -1) {\n\t\treturn \"\";\n\t}\n\treturn res.substring(0, idxOfPathent);\n  }\n\n  export function FUNC_LOG() {\n\tconsole.log(\"   %cENTER:\", \"color:white; background-color:purple;\", getName(3));\n  }"],"names":["constructor","this","todoList","addTodo","title","description","FUNC_LOG","todo","Todo","unshift","printTodo","index","length","element","console","log","toString","id","generateId","completed","createdAt","Date","updatedAt","val","globalID","markAsCompleted","v4","uuidv4","Application","todoRepo","TodoRepo","initApp","desc","$","append","renderTodo","app","document","ready","on","d","error","Error","stack","firefoxMatch","split","chromeMatch","safariMatch","res","replace","trim","idxOfPathent","indexOf","substring","getName"],"sourceRoot":""}