{"version":3,"file":"js/index.js?v=53064c0fd10353848def","mappings":"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","sources":["webpack://ts-basic/./src/application/core/datas/todoRepo.ts","webpack://ts-basic/./src/application/core/entities/todoItem.ts","webpack://ts-basic/./src/application/utilities/zLog.ts","webpack://ts-basic/./src/application/views/todo/todoView.ts","webpack://ts-basic/./src/application/views/todo/todoViewController.ts","webpack://ts-basic/./src/application/views/todoCompleted/todoCompletedView.ts","webpack://ts-basic/./src/application/views/todoCompleted/todoCompletedViewController.ts","webpack://ts-basic/./src/index.ts"],"sourcesContent":["import { Todo } from \"application/core/entities/todoItem\";\nimport { FUNC_LOG } from \"application/utilities/zLog\";\n\nexport class TodoRepo {\n  private _todoList: Todo[] = [];\n  public get todoList(): Todo[] {\n    return this._todoList;\n  }\n\n  constructor() {}\n\n  addTodo(title: string, description?: string): Todo {\n    FUNC_LOG();\n\n    const todo = new Todo(title, description);\n    this.todoList.unshift(todo);\n\n    //add new todo for data hahahaha\n    return todo;\n  }\n\n  buildDummyData() {\n    FUNC_LOG();\n\n    for (let i = 0; i < 10; i++) {\n      let todo = new Todo(\"Task \" + i, \"Desc Task \" + i);\n      this.todoList.push(todo);\n    }\n  }\n  buildDummyDataCompleted() {\n    FUNC_LOG();\n\n    for (let i = 20; i < 30; i++) {\n      let todo = new Todo(\"Task \" + i, \"Desc Task \" + i);\n      todo.markAsCompleted();\n      this.todoList.push(todo);\n    }\n  }\n\n  printTodo() {\n    FUNC_LOG();\n    for (let index = 0; index < this.todoList.length; index++) {\n      const element = this.todoList[index];\n      console.log(element.toString());\n    }\n  }\n\n  deleteTodo(todo: Todo) {\n    const idx = this.todoList.indexOf(todo);\n    if (idx !== -1) {\n      this.todoList.splice(idx, 1);\n    }\n  }\n}\n","import { FUNC_LOG } from \"application/utilities/zLog\";\n\nexport class Todo {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\tcompleted: boolean;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n  \n\tstatic globalID = 0;\n  \n\tconstructor(title: string, description?: string) {\n\t  this.id = this.generateId();\n\t  this.title = title;\n\t  this.description = description || \"\";\n\t  this.completed = false;\n\t  this.createdAt = new Date();\n\t  this.updatedAt = new Date();\n\t}\n  \n\tgenerateId(): string {\n\t\tFUNC_LOG();\n\n\t  // Generate a unique identifier for each Todo instance\n\t  let val = Todo.globalID;\n\t  Todo.globalID++;\n\t  return val.toString();\n\t}\n  \n\tmarkAsCompleted(): void {\n\t  this.completed = true;\n\t  this.updatedAt = new Date();\n\t}\n\n\t/**\n\t * get text from todo\n\t * @returns description of a todo\n\t */\n\ttoString(): string{\n\t\treturn `TODO #${this.id}\\t${this.title}\\t${this.description}\\t${this.updatedAt}\\t${this.completed}`\n\t}\n  }","\n// import chalk from \"chalk\";\nfunction getName(d:number) : string{\n\tconst error = new Error();\n\tif (error.stack == null) {\n\t  return \"\";\n\t}\n  \n\t// const firefoxMatch = (error.stack.split('\\n')[0 + d].match(/^.*(?=@)/) || [])[0];\n\t// const chromeMatch = ((((error.stack.split('at ') || [])[1 + d] || '').match(/(^|\\.| <| )(.*[^(<])( \\()/) || [])[2] || '').split('.').pop();\n\t// const safariMatch = error.stack.split('\\n')[0 + d];\n  \n\tconst firefoxMatch = error.stack.split('\\n')[0 + d];\n\tconst chromeMatch = error.stack.split('at ')[1 + d];\n\tconst safariMatch = error.stack.split('\\n')[0 + d];\n  \n\t// firefoxMatch ? console.log('firefoxMatch', firefoxMatch) : void 0;\n\t// chromeMatch ? console.log('chromeMatch', chromeMatch) : void 0;\n\t// safariMatch ? console.log('safariMatch', safariMatch) : void 0;\n\t\n\tlet res = firefoxMatch || chromeMatch || safariMatch;\n\n\tres = res.replace(\"at\", \"\");\n\tres = res.trim();\n\n\tconst idxOfPathent = res.indexOf(\"(\");\n\tif (idxOfPathent == -1) {\n\t\treturn \"\";\n\t}\n\treturn res.substring(0, idxOfPathent);\n  }\n\n  export function FUNC_LOG() {\n\tconsole.log(\"   %cENTER:\", \"color:white; background-color:purple;\", getName(3));\n  }","import { Todo } from \"application/core/entities/todoItem\";\nimport { FUNC_LOG } from \"application/utilities/zLog\";\n\nexport class TodoView {\n  private readonly table: JQuery<HTMLElement>;\n\n  private _delegate: TodoViewIF;\n\n  constructor(delegate: TodoViewIF) {\n    this._delegate = delegate;\n    this.table = $(\"#tblTodo\");\n    this.table.on(\"click\", \"tr\", function () {\n      const row = $(this);\n      console.log(\n        \"CLICKED ON ROW \" + row.attr(\"id\") + \"|\" + row.attr(\"todoID\")\n      );\n    });\n  }\n\n  /**\n   * Render all todo item to table\n   * @param todoList list of todo item to draw\n   */\n  render(todoList: Todo[]) {\n    const body = this.table.children(\"tbody\");\n    body.empty();\n\n    todoList.forEach((todo) => {\n      const rowID = \"todo-\" + todo.id;\n      var newRow = $(\"<tr>\");\n      newRow.attr(\"id\", rowID);\n      newRow.attr(\"todoID\", todo.id);\n\n      newRow.append($(\"<td>\").text(todo.title));\n\n      // Add delete button\n      const btnDelete = $(\"<button>\")\n        .text(\"Delete\")\n        .on(\"click\", () => {\n          this._btnDelete_Clicked(todo);\n        });\n      newRow.append($(\"<td>\").append(btnDelete));\n\n      // Add Complete button\n      const btnCompleted = $(\"<button>\")\n        .text(\"Completed\")\n        .on(\"click\", () => {\n          this._btnMarkAsCompleted_Clicked(todo);\n        });\n      newRow.append($(\"<td>\").append(btnCompleted));\n\n      body.append(newRow);\n    });\n  }\n\n  // #region UI Event\n\n  /**\n   * Delete a todo item from reposite and update UI\n   * @param todo todo item to delete\n   */\n  private _btnDelete_Clicked(todo: Todo) {\n    FUNC_LOG();\n\n    this._delegate.zRequestDelete(todo);\n  }\n\n  private _btnMarkAsCompleted_Clicked(todo: Todo) {\n    FUNC_LOG();\n    this._delegate.zRequestMarkCompleted(todo);\n  }\n  // #endregion UI Event\n\n  // #region HELPER\n  /**\n   * remove row for a todo\n   * @param todo todo item to be removed\n   */\n  deleteUIRowForTodo(todo: Todo) {\n    const rowID = \"#todo-\" + todo.id;\n    let row = this.table.find(\"tbody > \" + rowID);\n    if (row) {\n      row.remove();\n    }\n  }\n  // #endregion HELPER\n}\n\nexport interface TodoViewIF {\n  zRequestDelete(todo: Todo): void;\n  zRequestMarkCompleted(todo: Todo): void;\n}\n","import { TodoRepo } from \"application/core/datas/todoRepo\";\nimport { TodoView, TodoViewIF } from \"./todoView\";\nimport { FUNC_LOG } from \"application/utilities/zLog\";\nimport { Todo } from \"application/core/entities/todoItem\";\n\nexport class TodoViewController implements TodoViewIF {\n  todoRepo = new TodoRepo();\n\n  todoView = new TodoView(this);\n\n  constructor() {}\n\n  viewDidLoaded() {\n    FUNC_LOG();\n\n    this.todoRepo.buildDummyData();\n\n    this.render();\n  }\n\n  render() {\n    this.todoView.render(this.todoRepo.todoList);\n  }\n\n  // #region TodoView CallBack\n  zRequestDelete(todo: Todo): void {\n    console.log(`REQUEST DELETE ${todo.title}`);\n    this.todoRepo.deleteTodo(todo);\n    this.todoView.deleteUIRowForTodo(todo);\n  }\n  zRequestMarkCompleted(todo: Todo): void {\n    console.log(`REQUEST MARK COMPLETED ${todo.title}`);\n    todo.markAsCompleted();\n    this.todoView.deleteUIRowForTodo(todo);\n  }\n  // #endregion TodoView CallBack\n}\n","import { Todo } from \"application/core/entities/todoItem\";\nimport { FUNC_LOG } from \"application/utilities/zLog\";\n\nexport class TodoCompletedView {\n  private readonly table: JQuery<HTMLElement>;\n  private _delegate: TodoCompletedViewIF;\n\n  constructor(delegate: TodoCompletedViewIF) {\n    this.table = $(\"#tblCompleted\");\n    this._delegate = delegate;\n  }\n\n  /**\n   * Render all todo item to table\n   * @param todoList list of todo item to draw\n   */\n  render(todoList: Todo[]) {\n    const body = this.table.children(\"tbody\");\n    body.empty();\n\n    todoList.forEach((todo) => {\n      const rowID = \"todo-completed-\" + todo.id;\n      var newRow = $(\"<tr>\");\n      newRow.attr(\"id\", rowID);\n\n      newRow.append($(\"<td>\").text(todo.title));\n\n      // Add delete button\n      const btnDelete = $(\"<button>\")\n        .text(\"Delete\")\n        .on(\"click\", () => {\n          this._btnDelete_Clicked(todo);\n        });\n      newRow.append($(\"<td>\").append(btnDelete));\n\n      // Add Complete button\n      const btnRemoveCompleted = $(\"<button>\")\n        .text(\"Un Completed\")\n        .on(\"click\", () => {\n          //   this.btnMarkAsCompleted_Clicked(todo);\n        });\n      newRow.append($(\"<td>\").append(btnRemoveCompleted));\n\n      body.append(newRow);\n    });\n  }\n\n  // #region UI Event\n\n  /**\n   * Delete a todo item from reposite and update UI\n   * @param todo todo item to delete\n   */\n  private _btnDelete_Clicked(todo: Todo) {\n    FUNC_LOG();\n\n    this._delegate.requestDelete(todo);\n  }\n\n  // #endregion UI Event\n\n  // #region HELPER\n  /**\n   * remove row for a todo\n   * @param todo todo item to be removed\n   */\n  deleteUIRowForTodo(todo: Todo) {\n    const rowID = \"#todo-completed-\" + todo.id;\n    let row = this.table.find(\"tbody > \" + rowID);\n    if (row) {\n      row.remove();\n    }\n  }\n\n  // #endregion HELPER\n} // END CLASS TodoCompletedView\n\nexport interface TodoCompletedViewIF {\n  requestDelete(todo: Todo): void;\n  requestRemoveCompleted(todo: Todo): void;\n}\n","import { TodoRepo } from \"application/core/datas/todoRepo\";\nimport { FUNC_LOG } from \"application/utilities/zLog\";\nimport { Todo } from \"application/core/entities/todoItem\";\nimport { TodoCompletedView, TodoCompletedViewIF } from \"./todoCompletedView\";\n\nexport class TodoCompletedViewController implements TodoCompletedViewIF {\n  todoRepo = new TodoRepo();\n\n  todoView = new TodoCompletedView(this);\n\n  constructor() {}\n\n  viewDidLoaded() {\n    FUNC_LOG();\n\n    this.todoRepo.buildDummyDataCompleted();\n    this.render();\n  }\n\n  render() {\n    this.todoView.render(this.todoRepo.todoList);\n  }\n\n  // #region TodoView CallBack\n  requestDelete(todo: Todo): void {\n    console.log(`REQUEST DELETE ${todo.title}`);\n    this.todoRepo.deleteTodo(todo);\n    this.todoView.deleteUIRowForTodo(todo);\n  }\n  requestRemoveCompleted(todo: Todo): void {}\n  // #endregion TodoView CallBack\n}\n","import \"./styles/index.scss\";\n\nimport { FUNC_LOG } from \"application/utilities/zLog\";\nimport { TodoViewController } from \"application/views/todo/todoViewController\";\nimport { TodoCompletedViewController } from \"application/views/todoCompleted/todoCompletedViewController\";\n\nexport class Application {\n  static app = new Application();\n\n  todoVC = new TodoViewController();\n  todoCompletedVC = new TodoCompletedViewController();\n\n  constructor() {}\n\n  //INIT APP\n  initApp() {\n    FUNC_LOG();\n\n    this._initUIEvent();\n    this.todoVC.viewDidLoaded();\n    this.todoCompletedVC.viewDidLoaded();\n  }\n\n  private _initUIEvent() {\n    //use () => { due to scope of \"this\"\n    $(\"#btnTest\").on(\"click\", () => {\n      this._onBtnTest_Clicked();\n    });\n  }\n\n  //UI EVENT\n  private _onBtnTest_Clicked() {\n    console.log(\"BTN CLICKED\");\n\n    try {\n      // this.dummy222();\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error(\"EXCEPTION !!! \" + error.message);\n      }\n    }\n  }\n\n  // dummy222() {\n  //   console.log(\"DUUUUDUDU\");\n  //   throw new Error(\"OMG\");\n  // }\n}\n$(document).ready(function () {\n  // jQuery methods go here...\n  console.log(\"****************APP BEGIN****************\");\n  console.log(\"****************VERSION: \" + _APP_VERSION_ + \"****************\");\n\n  Application.app.initApp();\n});\n"],"names":["todoList","this","_todoList","constructor","addTodo","title","description","FUNC_LOG","todo","Todo","unshift","buildDummyData","i","push","buildDummyDataCompleted","markAsCompleted","printTodo","index","length","deleteTodo","idx","indexOf","splice","id","generateId","completed","createdAt","Date","updatedAt","val","globalID","toString","delegate","_delegate","table","$","on","render","body","children","empty","forEach","rowID","newRow","attr","append","text","btnDelete","_btnDelete_Clicked","btnCompleted","_btnMarkAsCompleted_Clicked","zRequestDelete","zRequestMarkCompleted","deleteUIRowForTodo","row","find","remove","todoRepo","TodoRepo","todoView","TodoView","viewDidLoaded","btnRemoveCompleted","requestDelete","TodoCompletedView","requestRemoveCompleted","Application","todoVC","TodoViewController","todoCompletedVC","TodoCompletedViewController","initApp","_initUIEvent","_onBtnTest_Clicked","app","document","ready"],"sourceRoot":""}